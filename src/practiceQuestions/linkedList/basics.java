package practiceQuestions.linkedList;

public class basics {
    public static void main(String[] args){
//        LinkedList l = new LinkedList();
//        System.out.println(l.size);
//        l.insertFirst(15);
//        l.insertFirst(20);
//        l.insertLast(15);
//        l.insertLast(20);
//        l.insert(5, 0);
//        l.insert(4, 1);
//        l.insert(3, 2);
//        l.insert(2, 3);
//        l.insert(1, 4);
//        l.insert(5, 5);
//        l.insert(6, 6);
//        l.insert(7, 7);
//        l.insert(8, 8);
//        l.insert(9, 9);
//        l.printLL();
//        l.removeFirst();
//        System.out.println();
//        System.out.println(l.size);
//        l.delete(5);
//        System.out.println();
//        System.out.println(l.size);
//        l.removeLast();
//        System.out.println();
//        System.out.println(l.size);
//        l.printLL();
//        l.delete(5);
//        System.out.println();
//        System.out.println(l.size);
//        l.printLL();
//        // Double linked list
//        DoublyLinkedList dll = new DoublyLinkedList();
//        System.out.println(dll.size);
//        dll.insertFirst(5);
//        dll.insertFirst(4);
//        dll.insert(3, 0);
//        dll.insert(2, 1);
//        dll.insert(1, 2);
//        dll.insert(5, 3);
//        dll.printLL();
//        System.out.println();
//        dll.removeFirst();
//        dll.printLL();
//        System.out.println();
//        dll.removeLast();
//        dll.delete(2);
//        dll.printLL();
//        System.out.println();
//        dll.reversePrint();
////        System.out.println();
////        dll.printLL();
//        dll.insertLast(5);
//        dll.insertLast(6);
//        System.out.println();
//        dll.printLL();
//        System.out.println();
//        dll.reversePrint();
//        dll.insert(8, 2);
//        dll.insert(9, 1);
//        dll.insert(10, 1);
//        dll.insert(11,2);
//        dll.printLL();
//        dll.delete(5);
//        System.out.println();
//        System.out.println(dll.size);
//        dll.printLL();
//        dll.delete(5);
//        System.out.println();
//        System.out.println(dll.size);
//        dll.printLL();
//        System.out.println();
//        dll.reversePrint();
        // Circular linked list
        CircularLinkedList cll = new CircularLinkedList();
//        System.out.println(cll.length);
        cll.insertFirst(5);
        cll.insertFirst(4);
        cll.insertFirst(3);
        cll.insertLast(2);
        cll.insertLast(1);
        cll.insert(10, 3);
        cll.insert(11, 3);

//        cll.add(5);
        cll.printLL();
        cll.delete(5);
        cll.removeFirst();
        cll.removeLast();
        cll.removeFirst();
        cll.removeLast();
        cll.removeLast();
        System.out.println();
        cll.reversePrint();
//        System.out.println(cll.length);
//        cll.printLL();
//        cll.delete(5);
//        System.out.println();
//        System.out.println(cll.length);
//        cll.printLL();
//        System.out.println();
//        cll.reversePrint();
//        System.out.println();
//        cll.printLL();
    }
}
